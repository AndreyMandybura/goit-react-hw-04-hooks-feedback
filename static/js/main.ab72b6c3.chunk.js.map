{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","list","listItem","FeedbackOptions","onClickGood","onClickNeutral","onClickBad","type","button","onClick","SectionTitle","title","children","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Section","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAkCeA,MA/Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,oBAAIF,UAAWC,IAAEE,SAAjB,SACE,0CAAaR,OAEf,oBAAIK,UAAWC,IAAEE,SAAjB,SACE,6CAAgBP,OAElB,oBAAII,UAAWC,IAAEE,SAAjB,SACE,yCAAYN,OAEd,oBAAIG,UAAWC,IAAEE,SAAjB,SACE,2CAAcL,OAEhB,oBAAIE,UAAWC,IAAEE,SAAjB,SACE,uDAA0BJ,EAA1B,e,gBCOKK,MAxBf,YAAuE,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WACtD,OACE,mCACE,gCACE,wBAAQC,KAAK,SAASR,UAAWC,IAAEQ,OAAQC,QAASL,EAApD,kBAGA,wBAAQG,KAAK,SAASR,UAAWC,IAAEQ,OAAQC,QAASJ,EAApD,qBAGA,wBAAQE,KAAK,SAASR,UAAWC,IAAEQ,OAAQC,QAASH,EAApD,uBCGOI,MAdf,YAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,gCACE,6BAAKD,IACJC,M,gBCKQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGf,UAAWC,IAAEe,aAAhB,SAA+BD,KCqDzBE,MAnDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KAcA,SAASC,IACP,OAAO3B,EAAOC,EAAUC,EAO1B,OACE,gCACE,cAAC0B,EAAD,CAASX,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEP,YAxBoB,WAC1Bc,GAAQ,SAAAK,GAAS,OAAIA,EAAY,MAwB3BlB,eArBuB,WAC7Bc,GAAW,SAAAI,GAAS,OAAIA,EAAY,MAqB9BjB,WAlBsB,WAC5Bc,GAAO,SAAAG,GAAS,OAAIA,EAAY,UAoBJ,IAAzBF,IACC,cAAC,EAAD,CAAcP,QAAS,yBAEvB,cAACQ,EAAD,CAASX,MAAO,aAAhB,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBArBD0B,KAAKC,MAAO/B,EAAO2B,IAAwB,aCxBtDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,aAAe,sC","file":"static/js/main.ab72b6c3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <ul className={s.list}>\n        <li className={s.listItem}>\n          <span>Good: {good}</span>\n        </li>\n        <li className={s.listItem}>\n          <span>Neutral: {neutral}</span>\n        </li>\n        <li className={s.listItem}>\n          <span>Bad: {bad}</span>\n        </li>\n        <li className={s.listItem}>\n          <span>Total: {total}</span>\n        </li>\n        <li className={s.listItem}>\n          <span>Positive feedback: {positivePercentage}%</span>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ onClickGood, onClickNeutral, onClickBad }) {\n  return (\n    <>\n      <div>\n        <button type=\"button\" className={s.button} onClick={onClickGood}>\n          Good\n        </button>\n        <button type=\"button\" className={s.button} onClick={onClickNeutral}>\n          Neutral\n        </button>\n        <button type=\"button\" className={s.button} onClick={onClickBad}>\n          Bad\n        </button>\n      </div>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onClickGood: PropTypes.func,\n  onClickNeutral: PropTypes.func,\n  onClickBad: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction SectionTitle({ title, children }) {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default SectionTitle;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveGoodFeedback = () => {\n    setGood(prevState => prevState + 1);\n  };\n\n  const onLeaveNeutralFeedback = () => {\n    setNeutral(prevState => prevState + 1);\n  };\n\n  const onLeavesetBadFeedback = () => {\n    setBad(prevState => prevState + 1);\n  };\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    return Math.round((good / countTotalFeedback()) * 100);\n  }\n\n  return (\n    <div>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          onClickGood={onLeaveGoodFeedback}\n          onClickNeutral={onLeaveNeutralFeedback}\n          onClickBad={onLeavesetBadFeedback}\n        />\n      </Section>\n      {countTotalFeedback() === 0 ? (\n        <Notification message={'There is no feedback'} />\n      ) : (\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1_msT\",\"listItem\":\"Statistics_listItem__3RpKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1JH5N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__38JoK\"};"],"sourceRoot":""}